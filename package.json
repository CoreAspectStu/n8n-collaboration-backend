
{
  "name": "n8n-collaboration-backend",
  "version": "1.0.0",
  "description": "Real-time collaboration backend service for n8n workflows",
  "main": "server.js",
  "scripts": {
    "start": "node server.js",
    "dev": "nodemon server.js",
    "debug": "node debug-server.js",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "test:e2e": "jest --testPathPattern=e2e",
    "lint": "eslint .",
    "lint:fix": "eslint . --fix",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "build": "echo 'No build step required for Node.js application'",
    "docker:build": "docker build -t n8n-collaboration-backend .",
    "docker:run": "docker run -p 3000:3000 -p 3001:3001 n8n-collaboration-backend",
    "docker:dev": "docker-compose up --build",
    "docker:prod": "docker-compose -f docker-compose.production.yml up --build -d",
    "health-check": "node -e \"require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })\"",
    "prepare": "husky install"
  },
  "keywords": [
    "n8n",
    "collaboration",
    "websocket",
    "real-time",
    "workflow",
    "socket.io",
    "nodejs",
    "express"
  ],
  "author": "n8n Collaboration Team",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/yourusername/n8n-collaboration-backend.git"
  },
  "bugs": {
    "url": "https://github.com/yourusername/n8n-collaboration-backend/issues"
  },
  "homepage": "https://github.com/yourusername/n8n-collaboration-backend#readme",
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "dependencies": {
    "express": "^4.18.2",
    "socket.io": "^4.7.5",
    "cors": "^2.8.5",
    "compression": "^1.7.4",
    "winston": "^3.11.0",
    "express-rate-limit": "^7.1.5",
    "helmet": "^7.1.0",
    "dotenv": "^16.3.1",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "uuid": "^9.0.1"
  },
  "devDependencies": {
    "@types/node": "^20.10.5",
    "nodemon": "^3.0.2",
    "jest": "^29.7.0",
    "supertest": "^6.3.3",
    "socket.io-client": "^4.7.5",
    "eslint": "^8.56.0",
    "eslint-config-airbnb-base": "^15.0.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-jest": "^27.6.0",
    "prettier": "^3.1.1",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "@commitlint/cli": "^18.4.3",
    "@commitlint/config-conventional": "^18.4.3"
  },
  "jest": {
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "**/*.js",
      "!node_modules/**",
      "!coverage/**",
      "!jest.config.js",
      "!**/*.test.js",
      "!**/*.spec.js"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "testMatch": [
      "**/__tests__/**/*.js",
      "**/?(*.)+(spec|test).js"
    ],
    "setupFilesAfterEnv": [
      "<rootDir>/tests/setup.js"
    ]
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged",
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS"
    }
  }
}
